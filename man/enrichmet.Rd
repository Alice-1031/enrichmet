% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enrichmet.R
\name{enrichmet}
\alias{enrichmet}
\title{ENRICHMET: R package for Quick and Easy Pathway Analysis in Metabolomics}
\usage{
enrichmet(
  inputMetabolites,
  PathwayVsMetabolites,
  example_data,
  top_n = 100,
  p_value_cutoff = 1,
  kegg_lookup = NULL,
  mapping_df = NULL,
  stitch_df = NULL
)
}
\arguments{
\item{inputMetabolites}{A vector of metabolites for which pathway enrichment and centrality analysis are to be performed.}

\item{PathwayVsMetabolites}{A data frame containing pathways and their associated metabolites.}

\item{example_data}{A data frame containing example data for GSEA. This should include columns such as "met_id", "pval", and "log2fc".}

\item{top_n}{An integer specifying the number of top pathways to include in the pathway enrichment results (default is 100).}

\item{p_value_cutoff}{A numeric value for adjusting the p-value threshold for filtering significant pathways (default is 1).}

\item{kegg_lookup}{Optional KEGG ID-to-name lookup table (data.frame with `kegg_id` and `name` columns).}

\item{mapping_df}{Optional data frame containing the mapping of metabolite IDs (KEGG_ID) to their corresponding STITCH IDs.}

\item{stitch_df}{Optional data frame containing STITCH interaction data, including STITCH IDs and chemical–chemical interaction information downloaded from the STITCH database.}
}
\value{
A list containing three ggplot objects: pathway enrichment plot, GSEA plot, and RBC plot.
}
\description{
This function performs pathway enrichment analysis using Fisher’s exact test, impact plot, computes betweenness centrality for metabolites,
and performs Metabolite Set Enrichment Analysis (MetSEA).
It also generates plots for pathway enrichment, MetSEA,relative betweenness centrality (RBC), network plot, heatmap plot, membership plot, interaction plot.
}
\examples{
## ** Examples
library(igraph)
library(ggraph)
library(ggplot2)
library(openxlsx)
library(dplyr)
library(tidyr)
library(fgsea)
library(ggrepel)
library(stringr)
library(ComplexHeatmap)
library(enrichmet)

# Generate example data with at least n=50 metabolites
set.seed(1234)

# Create 50 unique metabolites
inputMetabolites <- paste0("M", 1:20)

# Generate 10 pathways with random metabolites assigned
pathway_names <- paste0("Pathway", 1:50)
PathwayVsMetabolites <- data.frame(
  Pathway = rep(pathway_names, each = 1),
  Metabolites = sapply(1:50, function(x) paste(sample(inputMetabolites, sample(5:15, 1)), collapse = ","))
)

# Add new pathway entries (Pathway101 and Pathway102)
new_rows <- data.frame(
  Pathway = c("Pathway101", "Pathway102", "Pathway103", "Pathway104", "pathway105"),
  Metabolites = c(
    "M12,M13,M14,M15,M16,M1,M18,M3,M29,M6,M16,M4",
    "M6,M7,M8,M9,M10,M11,M9,M29,M6,M6,M16,M4",
    "M24,M25,M26,M27,M28,M29,M30,M29,M26,M5",
    "M13,M14,M15,M16,M17,M24,M27,M14",
    "M15,M16,M17,M18,M19,M20,M21,M4,M8,M10"
  )
)

# Combine with existing PathwayVsMetabolites
PathwayVsMetabolites <- rbind(PathwayVsMetabolites, new_rows)

# Generate example metabolite-level data
example_data <- data.frame(
  met_id = inputMetabolites,
  pval = runif(20, 0.001, 0.05),  # Random p-values between 0.001 and 0.05
  log2fc = rnorm(20, mean = 0, sd = 1)  # Log2 fold changes from normal distribution
)

# ---- 4. Create mapping_df ----
set.seed(42)
mapping_df <- data.frame(
 KEGG_ID = inputMetabolites,
 PubChem_CID = as.character(sample(10000:99999, length(inputMetabolites))),
STITCH_ID = paste0("CIDs", str_pad(sample(1000:9999, length(inputMetabolites)), 8, pad = "0"))
)

# ---- 5. Create synthetic STITCH interaction data ----
stitch_ids <- mapping_df$STITCH_ID

stitch_pairs <- expand.grid(chemical1 = stitch_ids, chemical2 = stitch_ids) \%>\%
 dplyr::filter(chemical1 != chemical2)

set.seed(123)
stitch_df <- stitch_pairs \%>\%
slice_sample(n = 200) \%>\%
dplyr::mutate(
  similarity = runif(n(), 0, 1),
  experimental = sample(0:500, n(), replace = TRUE),
  database = sample(c(0, 300, 600, 900), n(), replace = TRUE),
  textmining = sample(0:1000, n(), replace = TRUE),
  combined_score = similarity * 200 + experimental + database + textmining
 ) \%>\%
 as_tibble()

enrichmet(
inputMetabolites = inputMetabolites,
PathwayVsMetabolites = PathwayVsMetabolites, example_data,
top_n = 20,
 mapping_df = mapping_df,
stitch_df = stitch_df
)
}
